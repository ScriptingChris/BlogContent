---
- name: Configure Windows Server DC
  hosts: all
  vars:
    dc_address: 192.168.20.130
    dc_netmask_cidr: 24
    dc_gateway: 192.168.20.1
    dc_hostname: 'lab-dc01'
    domain_name: "lab.local"
    local_admin: 'vagrant'
    temp_password: 'vagrant'
    dc_password: 'P@ssw0rd1234'
    recovery_password: 'P@ssw0rd1234'
    upstream_dns_1: 1.1.1.1
    upstream_dns_2: 1.0.0.1
    reverse_dns_zone: "192.168.20.0/24"
    ntp_servers: "0.dk.pool.ntp.org,1.dk.pool.ntp.org"
  gather_facts: false
  tasks:

  - name: Set static IP address
    win_shell: "Get-NetIpAddress -InterfaceAlias 'Ethernet' | New-NetIPAddress -IpAddress {{ dc_address }} -PrefixLength {{ dc_netmask_cidr }} -DefaultGateway {{ dc_gateway }}" 
    ignore_errors: True
  
  - name: Add host to Ansible inventory with new IP
    add_host:
      name: '{{ dc_address }}'
      ansible_user: '{{ local_admin }}'
      ansible_password: '{{ temp_password }}'
      ansible_connection: winrm
      ansible_winrm_server_cert_validation: ignore
      ansible_winrm_port: 5985
      ansible_winrm_schema: http
  - name: Wait for system to become reachable over WinRM
    wait_for_connection:
      timeout: 120
    delegate_to: '{{ dc_address }}'

  - name: Setting local admin password
    win_user:
      name: administrator
      password: "{{dc_password}}"
      state: present
    delegate_to: '{{ dc_address }}'
    ignore_errors: True

  - name: Set upstream DNS server 
    win_dns_client:
      adapter_names: '*'
      ipv4_addresses:
      - '{{ upstream_dns_1 }}'
      - '{{ upstream_dns_2 }}'
    delegate_to: '{{ dc_address }}'

  - name: Stop the time service
    win_service:
      name: w32time
      state: stopped
    delegate_to: '{{ dc_address }}'

  - name: Setting the NTP servers
    win_shell: 'w32tm /config /syncfromflags:manual /manualpeerlist:"{{ntp_servers}}"'
    delegate_to: '{{ dc_address }}'  
  
  - name: Start the time service
    win_service:
      name: w32time
      state: started  
    delegate_to: '{{ dc_address }}'

  - name: Change the hostname of dc
    win_hostname:
      name: '{{ dc_hostname }}'
    register: res
    delegate_to: '{{ dc_address }}'
  
  - name: Reboot
    win_reboot:
      reboot_timeout: 60
    when: res.reboot_required   
    delegate_to: '{{ dc_address }}'

  - name: Install Active Directory Role
    win_feature: >
        name=AD-Domain-Services
        include_management_tools=yes
        include_sub_features=yes
        state=present
    register: result
    delegate_to: '{{ dc_address }}'
  
  - name: Create Domain
    win_domain: >
      dns_domain_name='{{ domain_name }}'
      safe_mode_password='{{ recovery_password }}'
    register: ad
    delegate_to: "{{ dc_address }}"

  - name: reboot server
    win_reboot:
      msg: "Installing AD. Rebooting..."
      reboot_timeout: 300
      pre_reboot_delay: 15
    when: ad.changed
    delegate_to: "{{ dc_address }}"
  
  - name: Set internal DNS server 
    win_dns_client:
      adapter_names: '*'
      ipv4_addresses:
      - '127.0.0.1'
    delegate_to: '{{ dc_address }}'

  - name: Create reverse DNS zone
    win_shell: "Add-DnsServerPrimaryZone -NetworkID {{reverse_dns_zone}} -ReplicationScope Forest"
    delegate_to: "{{ dc_address }}"    
    retries: 30
    delay: 60
    register: result           
    until: result is succeeded